{
  type: "recv",  // 支持send recv 两种模式
  syncTime: 5000,                 // 同步周期, 单位毫秒,不低于1000毫秒
  syncFile: "conf/offset.json",   // 同步offset到文件的路径

  log: {
    // 日志等级, (DebugLevel=-1; InfoLevel=0, WarnLevel=1; ErrorLevel=2; DPanicLevel=3; PanicLevel=4; FatalLevel=5)
    logLevel: -1,
    colorful: false,  // 是否需要彩色
    maxAge: 72,       // 日志最长保留时间, 单位 小时
    rotationTime: 24, // 日志滚动周期, 单位 小时, 24小时滚动一个文件
    console: true,    // 是否同时输出到控制台
    logDir: "logs_recv",   // 日志路径
  },


  source: [
    // 采集数据源, 支持 kafkamq rabbitmq rocketmq redismq mqtt3 natscoremq natsjsmq 消息队列
    {
      type: "natscoremq",
      isCompress: false, // 是否压缩
      mq: {
        clientId: "natsjsmq_client01r", // 客户端标识, 唯一
        user: "alice",
        password: "abcd1234",
        brokerList:  ["nats://127.0.0.1:4222"],
        allowReconnect: true,      // 是否自动重连
        maxReconnect: 500,         // 最大重连次数
        reconnectWait: 5000,       // 重连等待时间, 单位ms
        reconnectBufSize: 8388608, // 重连时缓存的最大消息容量, 单位byte, 8M字节
        connectTimeout: 5000,      // 连接超时时间, 单位ms
        pingInterval: 60000,       // 心跳间隔, 单位ms
        maxPingsOut: 3,            // 最大允许的连续无应答心跳次数
        useTls: false,             // 是否使用tls链路

        topics: [">"],             // 订阅的topic 列表, `>` 表示接收所有topic的消息
        queueGroup: "core_queue",  // 消费组名称, 用于负载均衡, 允许空字符串, 为空时为广播模式, 非空时为负载均衡模式, core模式下 没有 类似kafka的通过key的hash实现的负载均衡模式
        maxPending: 100000,        // 最大消息缓冲数量
      }
    }
  ],

  target: [
   
  ],
}
